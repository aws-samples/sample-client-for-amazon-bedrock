name: "test-ios-only"

on: 
  workflow_dispatch: # Manual trigger
  pull_request:
    paths:
      - 'flutter_app/**'
      - '.github/workflows/test-ios-only.yml'

# This workflow will only build the iOS app for testing purposes

jobs:
  test-ios:
    permissions:
      contents: write
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Node.js dependencies
        run: yarn install

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'

      - name: Install Flutter dependencies with clean
        run: |
          cd flutter_app
          flutter clean
          flutter pub cache repair
          flutter pub get

      # Use the exact same command as in package.json for consistency
      - name: Build iOS app using package.json script pattern
        run: |
          # Export web assets
          yarn export
          
          # Create assets directory and zip output
          mkdir -p ./flutter_app/assets
          zip -r ./flutter_app/assets/out.zip out

      - name: Install Cocoapods
        run: |
          sudo gem install cocoapods
          pod --version

      - name: Prepare iOS build
        run: |
          cd flutter_app/ios
          pod install

      # Optional: Setup code signing if secrets are available
      - name: Install Apple Certificate
        if: ${{ secrets.APPLE_CERTIFICATE != '' }}
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD || 'temporary_password' }}
        run: |
          # Create a temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain
          
          # Import certificate to keychain
          echo $APPLE_CERTIFICATE | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" build.keychain
          
          # Set up provisioning profiles if available
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          
          # Clean up
          rm certificate.p12

      - name: Build iOS (Debug)
        run: |
          cd flutter_app
          flutter build ios --debug --no-codesign

      - name: Create Debug IPA
        run: |
          cd flutter_app/build/ios/Debug-iphonesimulator
          mkdir -p Payload
          cp -r Runner.app Payload
          zip -r debug-ios-app.zip Payload

      - name: Upload Debug IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-debug-app
          path: flutter_app/build/ios/Debug-iphonesimulator/debug-ios-app.zip
          retention-days: 7
          
      # Try to build with code signing if available
      - name: Build iOS with signing (if available)
        if: ${{ secrets.APPLE_CERTIFICATE != '' }}
        env:
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        run: |
          cd flutter_app
          
          # Set up export options plist
          cat > exportOptions.plist << 'EOL'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>method</key>
    <string>development</string>
    <key>teamID</key>
    <string>${APPLE_TEAM_ID}</string>
</dict>
</plist>
EOL
          
          # Build with code signing
          flutter build ios --release
          
          # Archive and export IPA using xcodebuild
          cd ios
          xcodebuild -workspace Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath Runner.xcarchive
          xcodebuild -exportArchive -archivePath Runner.xcarchive -exportOptionsPlist ../exportOptions.plist -exportPath ../build/ios/iphoneos
          
      - name: Upload Release IPA (if available)
        if: ${{ secrets.APPLE_CERTIFICATE != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-app
          path: flutter_app/build/ios/iphoneos/Runner.ipa
          retention-days: 7
          
      # Build without code signing as fallback
      - name: Build iOS for physical devices (no signing)
        if: ${{ secrets.APPLE_CERTIFICATE == '' }}
        run: |
          cd flutter_app
          flutter build ios --release --no-codesign
          
      - name: Create Release IPA (no signing)
        if: ${{ secrets.APPLE_CERTIFICATE == '' }}
        run: |
          cd flutter_app/build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload
          zip -r release-ios-app.zip Payload
          
      - name: Upload Release IPA (no signing)
        if: ${{ secrets.APPLE_CERTIFICATE == '' }}
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-app-unsigned
          path: flutter_app/build/ios/iphoneos/release-ios-app.zip
          retention-days: 7
          
      - name: Upload build artifacts for debugging
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-artifacts
          path: |
            flutter_app/ios/Podfile.lock
            flutter_app/ios/Flutter/Generated.xcconfig
            flutter_app/exportOptions.plist
          retention-days: 3
